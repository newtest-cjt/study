# coding=utf-8
from tkinter import *
from tkinter import messagebox
import xlrd
import tkinter as tk
import time
import smtplib
import os
import win32ui
from email.mime.text import MIMEText
from email.mime.multipart import MIMEMultipart
from tkinter.ttk import *

x = 0
email_list=[]

def chfile():
    global filename
    dlg = win32ui.CreateFileDialog(1)  # 1表示打开文件对话框
    dlg.DoModal()
    filename = dlg.GetPathName()  # 获取选择的文件名称
    return filename

file_gongzi = chfile()##选择工资单表格
data_gongzidan = xlrd.open_workbook(file_gongzi)
sheet_gongzi_name = data_gongzidan.sheet_names()  # 获取所有sheet的名字
sheet_gongzi = data_gongzidan.sheet_by_name(sheet_gongzi_name[0])  # 通过sheet名字来找sheet
file_email = chfile()#选择邮箱表格
data_email = xlrd.open_workbook(file_email)
sheet_email_name = data_email.sheet_names()  # 获取所有sheet的名字
sheet_email = data_email.sheet_by_name(sheet_email_name[0])  # 通过sheet名字来找sheet

root = tk.Tk()
root.geometry("880x500+400+100")  # 距离屏幕边缘值
root.wm_title('明众定制v1.2')  # root窗口标题
root.resizable(width=False, height=False)

def getemailname():#获取姓名所在列
    for k in range(sheet_gongzi.ncols):
        if sheet_gongzi.row_values(0)[k] == '姓名' or sheet_gongzi.row_values(1)[k] == '姓名':
            print(k)
        else:
            print('k is null')
            return k


def getemailnum():#获取员工编号所在列
    for k in range(sheet_gongzi.ncols):
        if sheet_gongzi.row_values(0)[k] == '员工编号' or sheet_gongzi.row_values(1)[k] == '员工编号':
            return k

b = getemailnum()
employeenumberlist = sheet_gongzi.col_values(b)[2:] #从工资单表格获取员工编号

def getemail_table():#从email表格获取员工编号对应的邮箱
    M=0
    N=0
    for k in range(sheet_email.ncols):

        if sheet_email.row_values(0)[k] == '员工编号' or sheet_email.row_values(1)[k] == '员工编号':
            M=k

    for o in range(sheet_email.ncols):
        if sheet_email.row_values(0)[o] == '邮箱' or sheet_email.row_values(1)[o] == '邮箱':
            N=o

    table_employee=sheet_email.col_values(M)#邮箱表获取员工编号
    table_email = sheet_email.col_values(N)  # 邮箱表获取邮箱

    for i in range(len(employeenumberlist)):
        for j in range(len(table_employee)):
            if employeenumberlist[i]==table_employee[j]:
                email_list.append(table_email[j])

    return email_list#这个list是工资表人名对应的email列表
def add_element(number):
    data=[]
    add_n=''
    for i in range(number):
        data.append(add_n)
    return data
email_list=getemail_table()#从邮箱表获取对应的邮箱list
namelist=[]
a = getemailname()
print(a)
print(sheet_gongzi.col_values(a))
namelist_a = sheet_gongzi.col_values(a)[2:]#获取工资单表的所有人名单
for i in range(len(namelist_a)):
    M=list(namelist_a[i])
    if len(M)==2:
        M.insert(1,'   ')
    M=','.join(M)
    M=M.replace(',','')
    namelist.append(M)

# namelist.extend(add_element(10-len(namelist)//10))
# employeenumberlist.extend(add_element(10-len(employeenumberlist)//10))
# email_list.extend(add_element(10-len(email_list)//10))
def createch(num):
    states = []
    def test(i):
        states[i] = not states[i]
    if num < len(namelist) // 10:
        for i in range(10):
            label_i = Label(root, text=employeenumberlist[i + 10 * num])
            label_i.grid(row=i, column=0)
            label_i = Label(root, text=namelist[i + 10 * num])
            label_i.grid(row=i, column=1)
            label_i = Label(root, text=email_list[i + 10 * num])
            label_i.grid(row=i, column=2)
            b_i = tk.IntVar()
            check_i = tk.Checkbutton(root, variable=b_i, textvariable=b_i, command=(lambda i=i: test(i)))
            check_i.grid(row=i, column=3)
            check_i.select()
            b = b_i.get()

            if b == 0:
                states.append(0)
            elif b == 1:
                states.append(1)
    else:
        for i in range(10):
            try:
                label_i = Label(root, text=employeenumberlist[i + 10 * num])
                label_i.grid(row=i, column=0)
                label_i = Label(root, text=namelist[i + 10 * num])
                label_i.grid(row=i, column=1)
                label_i = Label(root, text=email_list[i + 10 * num])
                label_i.grid(row=i, column=2)
            except:
                label_i = Label(root, text='nullnull')
                label_i.grid(row=i, column=0)
                label_i = Label(root, text='nullnullnull')
                label_i.grid(row=i, column=1)
                label_i = Label(root, text='nullnullnullnullnullnull')
                label_i.grid(row=i, column=2)

            b_i = tk.IntVar()
            check_i = tk.Checkbutton(root, variable=b_i, textvariable=b_i, command=(lambda i=i: test(i)))
            check_i.grid(row=i, column=3)
            check_i.select()
            b = b_i.get()

            if b == 0:
                states.append(0)
            elif b == 1:
                states.append(1)

    return states


def nextye():
    global x, states
    if x < len(namelist) / 10:
        createch(x)
        states = createch(x)
        x = x + 1
        return x, states
    else:
        messagebox.showinfo(title='提示', message='没有下一页了')

def userconfig():
    def getdata():
        global user, password
        user = e1.get()
        password = e2.get()
        root1.destroy()
        url = 'https://myaccount.google.com/u/2/security#signin'
        # webbrowser.open(url)
        messagebox.showinfo(title='提示', message='配置成功')

    root1 = tk.Toplevel(root)
    Label(root1, text='邮箱账号：').grid(row=0)
    e1 = Entry(root1)
    e1.grid(row=0, column=1)
    Label(root1, text='邮箱密码：').grid(row=1)
    e2 = Entry(root1)
    e2['show'] = '*'
    e2.grid(row=1, column=1, rowspan=1)
    b1 = Button(root1, text='一键配置', command=getdata)
    b1.grid(row=3, column=0, columnspan=1, rowspan=1)


res_data_table_one = sheet_gongzi.row_values(0)#第一行表头内容
res_data_table_two = sheet_gongzi.row_values(1)#第二行表头内容

def create_str(strr,number):#生成html的字符串
    str_res = ''
    for i in range(number):
        w='<td width="1000" >' + str(strr[i]) + '</td>'
        str_res=str_res+w
    return str_res
def return_html(data_detail,name):
    res_data_data = data_detail
    content1 = t.get('0.0', END)
    content_res = content1.replace('A', name)
    word1 = '''
                       <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
           <html>
           <body >
           <table  border="1" cellspacing="0" cellpadding="20"  >
           '''
    word2 = r'<h1>' + content_res + '</h1>'
    word3 = '''
           <tr align="center" style="background-color:#8B8378">
             '''
    word4 = '<td  colspan=' + '\"' + str(len(res_data_table_two)) + '\">' + res_data_table_one[0]
    word5 = '''
             </td>
           </tr>
           <tr align="center" style="background-color:#CDC0B0">
             '''
    word6 = create_str(res_data_table_two, len(res_data_table_two))  # 生成表头列
    word7 = create_str(res_data_data, len(res_data_data))  # 数据列
    word8 = '''
           </table>
           </body>
           </html>
           '''
    word = word1 + word2 + word3 + word4 + word5 + word6 + '</tr><tr>' + word7 + '</tr>' + word8
    return word
def sendmail():
    user = 'mingzhong_hr@sina.com'
    password = 'a12345'
    print('账号：%s\n密码：%s\n' % (user, password))
    print('第' + str(x) + '页')
    print(states)
    title = e3.get()
    to = email_list#发送的邮箱列表
    for i in range(len(states)):
        if states[i] ==1 or states[i]==True:
            detail=sheet_gongzi.row_values(i+10 * (x - 1)+2)
            name=namelist[i+10 * (x - 1) ]
            word=return_html(detail,name)#html文件内容
            try:
                msg = MIMEMultipart('related')
                msg["Subject"] = title  # 标题
                msg["From"] = user
                content = MIMEText(word, 'html', 'utf-8')  # 内容
                msg.attach(content)
                s = smtplib.SMTP_SSL("smtp.sina.com", 465)
                s.ehlo()
                s.login(user, password)
                s.sendmail(user, to[i + 10 * (x - 1)], msg.as_string())
                s.quit()
                print('姓名：%s\n邮箱：%s\n状态：succed\n时间:%s' % (name, to[i + 10 * (x - 1)],
                time.strftime("%Y-%m-%d %H:%M:%S", time.localtime())))

            except smtplib.SMTPException:
                print('姓名：%s\n邮箱：%s\n状态：fail\n时间:%s' % (
                    name, to[i + 10 * (x - 1)],
                    time.strftime("%Y-%m-%d %H:%M:%S", time.localtime())))
        else:

            print('姓名:null不发送')

yeshu, states = nextye()

button1 = Button(root, text='发送邮件', command=sendmail)
button1.grid(row=10, column=0)
button1 = Button(root, text='下一页', command=nextye)
button1.grid(row=10, column=1)
button1 = Button(root, text='账号配置', command=userconfig)
button1.grid(row=11, column=0)
button1 = Button(root, text='退出', command=root.destroy)
button1.grid(row=11, column=1)
Label(root, text='标题:', font='bold').grid(row=0, column=4)
e3 = Entry(root, font=('宋体', '13', 'bold'))
e3.grid(row=0, column=5)
Label(root, text='邮件内容:', font='bold').grid(row=1, column=4,)
t = Text(root, width=50, height=16)
t.insert("insert",'邮件内容中员工姓名用大写的A代替\n如：亲爱的A老师，你好。这是你9月的工资详情')
t.grid(row=2, column=4, columnspan=5, rowspan=8)
root.mainloop()

os.system('pause')
